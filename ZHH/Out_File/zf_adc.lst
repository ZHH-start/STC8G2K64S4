C51 COMPILER V9.60.0.0   ZF_ADC                                                            12/08/2023 20:31:20 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE ZF_ADC
OBJECT MODULE PLACED IN .\Out_File\zf_adc.obj
COMPILER INVOKED BY: C:\Keil_v5_C51\C51\BIN\C51.EXE ..\Libraries\seekfree_libraries\zf_adc.c LARGE OMF2 OPTIMIZE(8,SPEED
                    -) BROWSE INCDIR(..\Libraries\libraries;..\Libraries\seekfree_libraries;..\Libraries\seekfree_peripheral;..\USER;..\CODE)
                    - DEBUG PRINT(.\Out_File\zf_adc.lst) TABS(2) OBJECT(.\Out_File\zf_adc.obj)

line level    source

   1          /*********************************************************************************************************
             -************
   2           * COPYRIGHT NOTICE
   3           * Copyright (c) 2020,逐飞科技
   4           * All rights reserved.
   5           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897(已满)  三群：824575535
   6           *
   7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
   8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
   9           *
  10           * @file          adc
  11           * @company       成都逐飞科技有限公司
  12           * @author        逐飞科技(QQ790875685)
  13           * @version       查看doc内version文件 版本说明
  14           * @Software    MDK FOR C51 V9.60
  15           * @Target core   STC8G2K64S4
  16           * @Taobao      https://seekfree.taobao.com/
  17           * @date          2020-4-14
  18           *********************************************************************************************************
             -***********/
  19          
  20          
  21          #include "zf_adc.h"
  22          #include "intrins.h"
  23          
  24          
  25          //--------------------------------------------------------------------------------------------------------
             ------------
  26          //  @brief      ADC初始化
  27          //  @param      adcn            选择ADC通道
  28          //  @param      speed         ADC时钟频率
  29          //  @return     void
  30          //  Sample usage:               adc_init(ADC_P10,ADC_SYSclk_DIV_2);//初始化P1.0为ADC功能,ADC时钟频率：SYSc
             -lk/2
  31          //--------------------------------------------------------------------------------------------------------
             ------------
  32          void adc_init(ADCN_enum adcn,ADC_SPEED_enum speed)
  33          {
  34   1        ADC_CONTR |= 1<<7;  //打开 ADC 电源
  35   1        ADC_CONTR &= (0xF0);    //清除ADC_CHS[3:0] ： ADC 模拟通道选择位
  36   1        ADC_CONTR |= adcn;
  37   1        
  38   1        if((adcn >> 3) == 1)    //P0口
  39   1        {
  40   2          //IO口需要设置为高阻输入
  41   2          P0M0 &= ~(1 << (adcn & 0x07));
  42   2          P0M1 |= (1 << (adcn & 0x07));
  43   2        }
  44   1        else if((adcn >> 3) == 0)   //P1口  
  45   1        {
  46   2          //IO口需要设置为高阻输入
  47   2          P1M0 &= ~(1 << (adcn & 0x07));
  48   2            P1M1 |= (1 << (adcn & 0x07));
C51 COMPILER V9.60.0.0   ZF_ADC                                                            12/08/2023 20:31:20 PAGE 2   

  49   2        }
  50   1      
  51   1        ADCCFG |= speed&0x0F; //ADC时钟频率SYSclk/2/speed&0x0F;
  52   1      
  53   1        ADCCFG |= 1<<5;     //转换结果右对齐。 ADC_RES 保存结果的高 2 位， ADC_RESL 保存结果的低 8 位。
  54   1      }
  55          
  56          
  57          
  58          //--------------------------------------------------------------------------------------------------------
             ------------
  59          //  @brief      ADC转换一次
  60          //  @param      adcn            选择ADC通道
  61          //  @param      resolution      分辨率
  62          //  @return     void
  63          //  Sample usage:               adc_convert(ADC_P10, ADC_10BIT);
  64          //--------------------------------------------------------------------------------------------------------
             ------------
  65          uint16 adc_once(ADCN_enum adcn,ADCRES_enum resolution)
  66          {
  67   1        uint16 adc_value;
  68   1        
  69   1        ADC_CONTR &= (0xF0);      //清除ADC_CHS[3:0] ： ADC 模拟通道选择位
  70   1        ADC_CONTR |= adcn;
  71   1        
  72   1        ADC_CONTR |= 0x40;        // 启动 AD 转换
  73   1        while (!(ADC_CONTR & 0x20));    // 查询 ADC 完成标志
  74   1        ADC_CONTR &= ~0x20;       // 清完成标志
  75   1        
  76   1        
  77   1        adc_value = ADC_RES;        //存储 ADC 的 10 位结果的高 2 位
  78   1        adc_value <<= 8;
  79   1        adc_value |= ADC_RESL;      //存储 ADC 的 10 位结果的低 8 位
  80   1        
  81   1      
  82   1        
  83   1        adc_value >>= resolution;   //取多少位
  84   1        
  85   1      
  86   1        return adc_value;
  87   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    122    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
