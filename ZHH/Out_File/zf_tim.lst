C51 COMPILER V9.60.0.0   ZF_TIM                                                            12/08/2023 20:31:21 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE ZF_TIM
OBJECT MODULE PLACED IN .\Out_File\zf_tim.obj
COMPILER INVOKED BY: C:\Keil_v5_C51\C51\BIN\C51.EXE ..\Libraries\seekfree_libraries\zf_tim.c LARGE OMF2 OPTIMIZE(8,SPEED
                    -) BROWSE INCDIR(..\Libraries\libraries;..\Libraries\seekfree_libraries;..\Libraries\seekfree_peripheral;..\USER;..\CODE)
                    - DEBUG PRINT(.\Out_File\zf_tim.lst) TABS(2) OBJECT(.\Out_File\zf_tim.obj)

line level    source

   1          /*********************************************************************************************************
             -************
   2           * COPYRIGHT NOTICE
   3           * Copyright (c) 2020,逐飞科技
   4           * All rights reserved.
   5           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897(已满)  三群：824575535
   6           *
   7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
   8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
   9           *
  10           * @file          ctime
  11           * @company       成都逐飞科技有限公司
  12           * @author        逐飞科技(QQ790875685)
  13           * @version       查看doc内version文件 版本说明
  14           * @Software    MDK FOR C51 V9.60
  15           * @Target core   STC8G2K64S4
  16           * @Taobao      https://seekfree.taobao.com/
  17           * @date          2020-4-14
  18           *********************************************************************************************************
             -***********/
  19          
  20          
  21          #include "zf_tim.h"
  22          #include "board.h"
  23          
  24          //--------------------------------------------------------------------------------------------------------
             ------------
  25          //  @brief      定时器初始化作为外部计数
  26          //  @param      tim_n           选择模块
  27          //  @return     void
  28          //  @since      v1.0
  29          //  Sample usage:               ctimer_count_init(CTIM0_P34);   //初始化定时器0，外部输入为P3.4引脚
  30          //  @note                       串口1使用定时器1作为波特率发生器，
  31          //                串口2使用定时器2作为波特率发生器，
  32          //                串口3使用定时器3作为波特率发生器，
  33          //                串口4使用定时器4作为波特率发生器，
  34          //                              STC8G仅有定时器0-定时器4，这5个定时器。
  35          //                编码器采集数据也需要定时器作为外部计数。
  36          //--------------------------------------------------------------------------------------------------------
             ------------
  37          void ctimer_count_init(CTIMN_enum tim_n)
  38          {
  39   1        switch(tim_n)
  40   1        {
  41   2          case CTIM0_P34:
  42   2          {
  43   3            TL0 = 0; 
  44   3            TH0 = 0; 
  45   3            TMOD |= 0x04; //外部计数模式
  46   3            TR0 = 1; //启动定时器
  47   3            break;
  48   3          }
  49   2          
C51 COMPILER V9.60.0.0   ZF_TIM                                                            12/08/2023 20:31:21 PAGE 2   

  50   2          case CTIM1_P35:
  51   2          {
  52   3            TL1 = 0x00;
  53   3            TH1 = 0x00;
  54   3            TMOD |= 0x40; // 外部计数模式
  55   3            TR1 = 1; // 启动定时器
  56   3            break;
  57   3          }
  58   2          
  59   2          case CTIM2_P12:
  60   2          {
  61   3            T2L = 0x00;
  62   3            T2H = 0x00;
  63   3            AUXR |= 0x18; // 设置外部计数模式并启动定时器
  64   3            break;
  65   3          }
  66   2          
  67   2          case CTIM3_P04:
  68   2          {
  69   3            T3L = 0; 
  70   3            T3H = 0;
  71   3            T4T3M |= 0x0c; // 设置外部计数模式并启动定时器
  72   3            break;
  73   3          }
  74   2          
  75   2          case CTIM4_P06:
  76   2          {
  77   3            T4L = 0;
  78   3            T4H = 0;
  79   3            T4T3M |= 0xc0; // 设置外部计数模式并启动定时器
  80   3            break;
  81   3          }
  82   2        
  83   2        } 
  84   1      } 
  85          
  86          //--------------------------------------------------------------------------------------------------------
             ------------
  87          //  @brief      获取计数数值
  88          //  @param      countch     计数通道号及引脚
  89          //  @return     uint32      返回计数值
  90          //  Sample usage:           num = ctimer_count_read(CTIM0_P34);     
  91          //--------------------------------------------------------------------------------------------------------
             ------------
  92          uint16 ctimer_count_read(CTIMN_enum tim_n)
  93          {
  94   1        uint16 dat;
  95   1        
  96   1        switch(tim_n)
  97   1        {
  98   2          case CTIM0_P34:
  99   2          {
 100   3            dat = (uint8)TH0 << 8;
 101   3            dat = ((uint8)TL0) | dat;
 102   3            break;
 103   3          }
 104   2          case CTIM1_P35:
 105   2          {
 106   3            dat = (uint8)TH1 << 8;
 107   3            dat = ((uint8)TL1) | dat;
 108   3            break;
 109   3          }
C51 COMPILER V9.60.0.0   ZF_TIM                                                            12/08/2023 20:31:21 PAGE 3   

 110   2          case CTIM2_P12:
 111   2          {
 112   3            dat = (uint8)T2H << 8;
 113   3            dat = ((uint8)T2L) | dat;
 114   3            break;
 115   3          }
 116   2          case CTIM3_P04:
 117   2          {
 118   3            dat = (uint8)T3H << 8;
 119   3            dat = ((uint8)T3L) | dat; 
 120   3            break;
 121   3          }
 122   2          case CTIM4_P06:
 123   2          {
 124   3            dat = (uint8)T4H << 8;
 125   3            dat = ((uint8)T4L) | dat;
 126   3            break;
 127   3          }
 128   2          
 129   2        }
 130   1      
 131   1      
 132   1        return dat;
 133   1      }
 134          
 135          
 136          //--------------------------------------------------------------------------------------------------------
             ------------
 137          //  @brief      清除计数数值
 138          //  @param      countch     计数通道号及引脚
 139          //  @return     void      
 140          //  Sample usage:           ctimer_count_clean(CTIM0_P34);     
 141          //--------------------------------------------------------------------------------------------------------
             ------------
 142          void ctimer_count_clean(CTIMN_enum tim_n)
 143          { 
 144   1        switch(tim_n)
 145   1        {
 146   2          case CTIM0_P34:
 147   2          {
 148   3            TR0 = 0;
 149   3            TH0 = 0;
 150   3            TL0 = 0;
 151   3            TR0 = 1;
 152   3            break;
 153   3          }
 154   2          case CTIM1_P35:
 155   2          {
 156   3            TR1 = 0;
 157   3            TH1 = 0;
 158   3            TL1 = 0;
 159   3            TR1 = 1;
 160   3            break;
 161   3          }
 162   2          case CTIM2_P12:
 163   2          {
 164   3            AUXR &= ~(1<<4);
 165   3            T2H = 0;
 166   3            T2L = 0;
 167   3            AUXR |= 1<<4;
 168   3            break;
 169   3          }
C51 COMPILER V9.60.0.0   ZF_TIM                                                            12/08/2023 20:31:21 PAGE 4   

 170   2          case CTIM3_P04:
 171   2          {
 172   3            T4T3M &= ~(1<<3);
 173   3            T3H = 0;
 174   3            T3L = 0;
 175   3            T4T3M |= (1<<3);
 176   3            break;
 177   3          }
 178   2          case CTIM4_P06:
 179   2          {
 180   3            T4T3M &= ~(1<<7);
 181   3            T4H = 0;
 182   3            T4L = 0;
 183   3            T4T3M |= (1<<7);
 184   3            break;
 185   3          }
 186   2        }
 187   1      }
 188          
 189          //--------------------------------------------------------------------------------------------------------
             ------------
 190          //  @brief      定时器周期中断
 191          //  @param      tim_n      定时器通道号
 192          //  @param      time_ms    时间(ms)
 193          //  @return     void      
 194          //  Sample usage:          pit_timer_ms(TIM_0, 10)
 195          //               使用定时器0做周期中断，时间10ms一次。
 196          //--------------------------------------------------------------------------------------------------------
             ------------
 197          void pit_timer_ms(TIMN_enum tim_n,uint16 time_ms)
 198          {
 199   1        uint16 temp;
 200   1        temp = 65536 - (sys_clk / (12 * (1000 / time_ms)));
 201   1        
 202   1        if(TIM_0 == tim_n)
 203   1        {
 204   2          TMOD |= 0x00;   // 模式 0
 205   2          TL0 = temp;   
 206   2          TH0 = temp >> 8;
 207   2          TR0 = 1;    // 启动定时器
 208   2          ET0 = 1;    // 使能定时器中断
 209   2        }
 210   1        else if(TIM_1 == tim_n)
 211   1        {
 212   2          TMOD |= 0x00; // 模式 0
 213   2          TL1 = temp;   
 214   2          TH1 = temp >> 8;
 215   2          TR1 = 1; // 启动定时器
 216   2          ET1 = 1; // 使能定时器中断
 217   2        }
 218   1        else if(TIM_2 == tim_n)
 219   1        {
 220   2          T2L = temp;   
 221   2          T2H = temp >> 8;
 222   2          AUXR |= 0x10; // 启动定时器
 223   2          IE2 |= 0x04; // 使能定时器中断
 224   2        }
 225   1        else if(TIM_3 == tim_n)
 226   1        {
 227   2          T3L = temp;   
 228   2          T3H = temp >> 8;
 229   2          T4T3M |= 0x08; // 启动定时器
C51 COMPILER V9.60.0.0   ZF_TIM                                                            12/08/2023 20:31:21 PAGE 5   

 230   2          IE2 |= 0x20; // 使能定时器中断
 231   2        }
 232   1        else if(TIM_4 == tim_n)
 233   1        {
 234   2          T4L = temp;   
 235   2          T4H = temp >> 8;
 236   2          T4T3M |= 0x80; // 启动定时器
 237   2          IE2 |= 0x40; // 使能定时器中断
 238   2        }
 239   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    350    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
