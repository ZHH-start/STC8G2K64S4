C51 COMPILER V9.60.0.0   BOARD                                                             12/08/2023 20:31:19 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE BOARD
OBJECT MODULE PLACED IN .\Out_File\board.obj
COMPILER INVOKED BY: C:\Keil_v5_C51\C51\BIN\C51.EXE ..\Libraries\libraries\board.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE I
                    -NCDIR(..\Libraries\libraries;..\Libraries\seekfree_libraries;..\Libraries\seekfree_peripheral;..\USER;..\CODE) DEBUG PRI
                    -NT(.\Out_File\board.lst) TABS(2) OBJECT(.\Out_File\board.obj)

line level    source

   1          #include "board.h"
   2          #include "zf_pca_delay.h"
   3          #include "zf_uart.h"
   4          #include "zf_tim.h"
   5          #include "zf_iic.h"
   6          #include "drive_oled.h"
   7          #include "stdio.h"
   8          
   9          // 22.11MHzµÄIRC²ÎÊý¼Ä´æÆ÷ 0xFB
  10          // 24MHzµÄIRC²ÎÊý¼Ä´æÆ÷ 0xFB
  11          #define IRC_22M (*((uint8 idata *)0xFA))
  12          #define IRC_24M (*((uint8 idata *)0xFB))
  13          
  14          // ÏµÍ³ÆµÂÊ±äÁ¿
  15          uint32 sys_clk = 0;
  16          
  17          //--------------------------------------------------------------------------------------------------------
             ------------
  18          //  @brief      »ñÈ¡ÏµÍ³ÆµÂÊ
  19          //  @param      NULL            ¿ÕÖµ
  20          //  @return     void          ÏµÍ³ÆµÂÊ
  21          //  Sample usage:
  22          //--------------------------------------------------------------------------------------------------------
             ------------
  23          uint32 get_clk(void)
  24          {
  25   1          uint32 temp_count;
  26   1      
  27   1          P_SW2 |= 0x80;
  28   1      
  29   1          if (IRCBAND)
  30   1              temp_count = 36000000UL + ((int32)((int32)IRTRIM - (int32)IRC_22M) * 0x128E0UL); // ÆµÂÊµÄÆ«²î,¼ÆË
             -ã³ö´ó¸ÅÊý¾Ý
  31   1          else
  32   1              temp_count = 24000000UL + ((int32)((int32)IRTRIM - (int32)IRC_24M) * 0xBB80UL); // ÆµÂÊµÄÆ«²î,¼ÆËã
             -³ö´ó¸ÅÊý¾Ý
  33   1      
  34   1          temp_count /= CLKDIV; // ÆµÂÊÌ«µÍÐèÒª·ÖÆµ
  35   1      
  36   1          if (temp_count < 5764800UL)
  37   1              return 5529600UL;
  38   1          else if (temp_count < 8529600UL)
  39   1              return 6000000UL;
  40   1          else if (temp_count < 11529600UL)
  41   1              return 11059200UL;
  42   1          else if (temp_count < 15216000UL)
  43   1              return 12000000UL;
  44   1          else if (temp_count < 19216000UL)
  45   1              return 18432000UL;
  46   1          else if (temp_count < 21059200UL)
  47   1              return 20000000UL;
  48   1          else if (temp_count < 23059200UL)
  49   1              return 22118400UL;
C51 COMPILER V9.60.0.0   BOARD                                                             12/08/2023 20:31:19 PAGE 2   

  50   1          else if (temp_count < 25500000UL)
  51   1              return 24000000UL;
  52   1          else if (temp_count < 28500000UL)
  53   1              return 27000000UL;
  54   1          else if (temp_count < 31500000UL)
  55   1              return 30000000UL;
  56   1          else if (temp_count < 33500000UL)
  57   1              return 33177600UL;
  58   1          else
  59   1              return 35000000UL;
  60   1      }
  61          
  62          //--------------------------------------------------------------------------------------------------------
             ------------
  63          //  @brief      ³õÊ¼»¯ÄÚ²¿¼Ä´æÆ÷
  64          //  @param      NULL            ¿ÕÖµ
  65          //  @return     void          ÏµÍ³ÆµÂÊ
  66          //  Sample usage:
  67          //--------------------------------------------------------------------------------------------------------
             ------------
  68          void board_init(void)
  69          {
  70   1      // »ñÈ¡ÏµÍ³ÆµÂÊ
  71   1      #if (0 == FOSC)
  72   1          sys_clk = get_clk();
  73   1      #else
                  sys_clk = FOSC;
              #endif
  76   1      
  77   1      #if (1 == EXTERNAL_CRYSTA_ENABLE)
                  P_SW2  = 0x80;
                  XOSCCR = 0xc0; // Æô¶¯Íâ²¿¾§Õñ
                  while (!(XOSCCR & 1))
                      ;          // µÈ´ýÊ±ÖÓÎÈ¶¨
                  CLKDIV = 0x00; // Ê±ÖÓ²»·ÖÆµ
                  CKSEL  = 0x01; // Ñ¡ÔñÍâ²¿¾§Õñ
                  P_SW2  = 0x00;
              #endif
  86   1          P0M0   = 0x00;
  87   1          P0M1   = 0x00;
  88   1          P1M0   = 0x00;
  89   1          P1M1   = 0x00;
  90   1          P2M0   = 0x00;
  91   1          P2M1   = 0x00;
  92   1          P3M0   = 0x00;
  93   1          P3M1   = 0x00;
  94   1          P4M0   = 0x00;
  95   1          P4M1   = 0x00;
  96   1          P5M0   = 0x00;
  97   1          P5M1   = 0x00;
  98   1          CCON   = 0x00;
  99   1          CMOD   = 0x00; // PCA Ê±ÖÓÎªÏµÍ³Ê±ÖÓ /12
 100   1          ADCCFG = 0;
 101   1          AUXR   = 0;
 102   1          SCON   = 0;
 103   1          S2CON  = 0;
 104   1          S3CON  = 0;
 105   1          S4CON  = 0;
 106   1          P_SW1  = 0;
 107   1          P_SW2  = 0;
 108   1          IE2    = 0;
 109   1          TMOD   = 0;
C51 COMPILER V9.60.0.0   BOARD                                                             12/08/2023 20:31:19 PAGE 3   

 110   1          CL     = 0;
 111   1          CH     = 0;
 112   1          P_SW2 |= 0x80;
 113   1          //  printf("oled_init");
 114   1      }
 115          
 116          #if (1 == PRINTF_ENABLE) // ³õÊ¼»¯µ÷ÊÔ´®¿Ú
 117          // ÖØ¶¨Òåprintf Êý×Ö Ö»ÄÜÊä³öuint16
 118          char putchar(char c)
 119          {
 120   1          uart_putchar(UART_1, (uint8)c); // °Ñ×Ô¼ºÊµÏÖµÄ´®¿Ú´òÓ¡Ò»×Ö½ÚÊý¾ÝµÄº¯ÊýÌæ»»µ½ÕâÀï
 121   1          return c;
 122   1      }
 123          #endif
 124          
 125          //--------------------------------------------------------------------------------------------------------
             ------------
 126          //  @brief      Ê§ÄÜÍâ²¿ÖÐ¶Ï
 127          //  @param      NULL
 128          //  @return     NULL
 129          //  Sample usage:
 130          //--------------------------------------------------------------------------------------------------------
             ------------
 131          void DisableGlobalIRQ(void)
 132          {
 133   1          EA = 0;
 134   1      }
 135          
 136          //--------------------------------------------------------------------------------------------------------
             ------------
 137          //  @brief      Ê¹ÄÜÍâ²¿ÖÐ¶Ï
 138          //  @param      NULL
 139          //  @return     NULL
 140          //  Sample usage:
 141          //--------------------------------------------------------------------------------------------------------
             ------------
 142          void EnableGlobalIRQ(void)
 143          {
 144   1          EA = 1;
 145   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    650    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      4       5
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
